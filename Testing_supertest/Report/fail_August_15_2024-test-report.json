{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 3,
    "pending": 0,
    "failures": 3,
    "start": "2024-08-15T15:07:52.230Z",
    "end": "2024-08-15T15:07:54.390Z",
    "duration": 2160,
    "testsRegistered": 6,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e8ac9c35-384b-45b6-9ac0-796e9b360bdb",
      "title": "",
      "fullFile": "D:\\learning\\Testing_Bootcamp\\Mock_user_Auth_Supertest\\Testing_supertest\\Specs\\test.spec.js",
      "file": "\\Specs\\test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b5596e64-e439-43b7-b37c-cd51ed0ae79d",
          "title": "Test Suite 1 - Verify that API Routes for mock-user-auth returns correctly (Valid)",
          "fullFile": "D:\\learning\\Testing_Bootcamp\\Mock_user_Auth_Supertest\\Testing_supertest\\Specs\\test.spec.js",
          "file": "\\Specs\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify that the \"CREATE USER\" API returns correctly",
              "fullTitle": "Test Suite 1 - Verify that API Routes for mock-user-auth returns correctly (Valid) Verify that the \"CREATE USER\" API returns correctly",
              "timedOut": true,
              "duration": 705,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Response Body\",\n    \"value\": {\n      \"message\": \"User registered with success\"\n    }\n  },\n  {\n    \"title\": \"Error\",\n    \"value\": {\n      \"name\": \"AssertionError\",\n      \"message\": \"expected { Object (message) } to have property 'token'\",\n      \"showDiff\": false,\n      \"actual\": {\n        \"message\": \"User registered with success\"\n      },\n      \"stack\": \"AssertionError: expected { Object (message) } to have property 'token'\\n    at Context.<anonymous> (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\Specs\\\\test.spec.js:25:18)\\n    at callFnAsync (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runnable.js:392:21)\\n    at Runnable.run (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runnable.js:336:7)\\n    at Runner.runTest (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:677:10)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:800:12\\n    at next (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:592:14)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:602:7\\n    at next (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:485:14)\\n    at Immediate._onImmediate (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:570:5)\\n    at process.processImmediate (node:internal/timers:483:21)\\n----\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\Specs\\\\test.spec.js:27:46\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:308:13\\n    at Test._assertFunction (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:285:13)\\n    at Test.assert (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:164:23)\\n    at localAssert (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:120:14)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:125:7\\n    at Request.callback (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\superagent\\\\lib\\\\node\\\\index.js:837:12)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\superagent\\\\lib\\\\node\\\\index.js:1078:18\\n    at IncomingMessage.<anonymous> (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\superagent\\\\lib\\\\node\\\\parsers\\\\json.js:21:7)\\n    at IncomingMessage.emit (node:events:531:35)\\n    at endReadableNT (node:internal/streams/readable:1696:12)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\"\n    }\n  }\n]",
              "code": "request('http://localhost:8081') // Test endpoint\n    .post('/api/v1/users') // API endpoint\n    .send({\n        \"name\": name,\n        \"email\": email,\n        \"password\": password\n      }) // request body\n    .expect(200) // expected response status code\n    .expect(function (res) {\n        expect(res.body.message).to.equal(\"User registered with success\" )\n        expect(res.body).to.have.property('token');   \n        }) // expected response body\n    .end((err, res) => {\n            addContext(this, { // Log the response body\n                title: 'Response Body',\n                value: res.body\n            })\n            if (err) {\n                addContext(this, { // Log error to report\n                    title: 'Error',\n                    value: err\n                })\n                return\n                \n            }\n            done()\n        }); // end the test case",
              "err": {
                "message": "Error: Timeout of 700ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\learning\\Testing_Bootcamp\\Mock_user_Auth_Supertest\\Testing_supertest\\Specs\\test.spec.js)",
                "estack": "Error: Timeout of 700ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\learning\\Testing_Bootcamp\\Mock_user_Auth_Supertest\\Testing_supertest\\Specs\\test.spec.js)\n    at listOnTimeout (node:internal/timers:581:17)\n    at process.processTimers (node:internal/timers:519:7)",
                "diff": null
              },
              "uuid": "e8d1aa39-116c-44c4-bfc6-b1261b67391a",
              "parentUUID": "b5596e64-e439-43b7-b37c-cd51ed0ae79d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the \"AUTH USER\" API returns correctly",
              "fullTitle": "Test Suite 1 - Verify that API Routes for mock-user-auth returns correctly (Valid) Verify that the \"AUTH USER\" API returns correctly",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Response Body\",\n  \"value\": {\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImR1bW15X2VtYWlsQGdtYWlsLmNvbSIsImlkIjo5MDE5MSwiaWF0IjoxNzIzNzM0NDcyLCJleHAiOjE3MjM4MjA4NzJ9.cbdUYbLcWN3lBT6P-cHvFx8GBEihMwz8Eu0eYgFmzko\"\n  }\n}",
              "code": "request('http://localhost:8081') // Test endpoint\n    .post('/api/v1/auth') // API endpoint\n    .send({\n            \"email\": email,\n            \"password\": password\n    }) // request body\n    .expect(200) // expected response status code\n    .expect(function (res) {\n        expect(res.body).to.have.property('token');\n        }) // expected response body\n    .end((err, res) => {\n            addContext(this, { // Log the response body\n                title: 'Response Body',\n                value: res.body\n            })\n            if (err) {\n                addContext(this, { // Log error to report\n                    title: 'Error',\n                    value: err\n                })\n                return\n                \n            }\n            //set token to be used in next test cases\n            token =res.body.token\n            done()\n    }); // end the test case",
              "err": {},
              "uuid": "4b2e78b5-1bf9-4b29-be0a-28070d442da3",
              "parentUUID": "b5596e64-e439-43b7-b37c-cd51ed0ae79d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the \"GET USER BY TOKEN\" API returns correctly",
              "fullTitle": "Test Suite 1 - Verify that API Routes for mock-user-auth returns correctly (Valid) Verify that the \"GET USER BY TOKEN\" API returns correctly",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Response Body\",\n  \"value\": {\n    \"id\": 90191,\n    \"name\": \"dummy_name\",\n    \"email\": \"dummy_email@gmail.com\",\n    \"password\": \"123456\",\n    \"imageUrl\": \"https://almsaeedstudio.com/themes/AdminLTE/dist/img/user2-160x160.jpg\"\n  }\n}",
              "code": "request('http://localhost:8081') // Test endpoint\n    .get('/api/v1/users') // API endpoint\n    .set('Authorization', token) //set token\n    .expect(200) // expected response status code\n    .expect(function (res) {\n        expect(res.body).to.have.property('id');\n        expect(res.body).to.have.property('name');\n        expect(res.body).to.have.property('email');\n        expect(res.body).to.have.property('password');\n        expect(res.body).to.have.property('imageUrl');\n        expect(res.body.name).to.equal(name)\n        expect(res.body.email).to.equal(email)\n        expect(res.body.password).to.equal(password)\n        }) // expected response body\n    .end((err, res) => {\n            addContext(this, { // Log the response body\n                title: 'Response Body',\n                value: res.body\n            })\n            if (err) {\n                addContext(this, { // Log error to report\n                    title: 'Error',\n                    value: err\n                })\n                return\n                \n            }\n            done()\n    }); // end the test case",
              "err": {},
              "uuid": "c3479d0a-fdeb-4692-83b8-60587e79afc2",
              "parentUUID": "b5596e64-e439-43b7-b37c-cd51ed0ae79d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the \"PATCH USER BY TOKEN\" API returns correctly",
              "fullTitle": "Test Suite 1 - Verify that API Routes for mock-user-auth returns correctly (Valid) Verify that the \"PATCH USER BY TOKEN\" API returns correctly",
              "timedOut": true,
              "duration": 709,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Response Body\",\n    \"value\": {\n      \"data\": {\n        \"id\": 90191,\n        \"name\": \"dummy_namepatch\",\n        \"email\": \"dummy_email@gmail.com\",\n        \"password\": \"123456patch\",\n        \"imageUrl\": \"https://almsaeedstudio.com/themes/AdminLTE/dist/img/user2-160x160.jpg\"\n      },\n      \"message\": \"User updated with success!\"\n    }\n  },\n  {\n    \"title\": \"Error\",\n    \"value\": {\n      \"name\": \"AssertionError\",\n      \"message\": \"expected 'User updated with success!' to equal 'User updated with success'\",\n      \"showDiff\": true,\n      \"actual\": \"User updated with success!\",\n      \"expected\": \"User updated with success\",\n      \"stack\": \"AssertionError: expected 'User updated with success!' to equal 'User updated with success'\\n    at Context.<anonymous> (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\Specs\\\\test.spec.js:126:18)\\n    at callFnAsync (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runnable.js:392:21)\\n    at Runnable.run (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runnable.js:336:7)\\n    at Runner.runTest (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:677:10)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:800:12\\n    at next (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:592:14)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:602:7\\n    at next (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:485:14)\\n    at Immediate._onImmediate (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:570:5)\\n    at process.processImmediate (node:internal/timers:483:21)\\n----\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\Specs\\\\test.spec.js:127:49\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:308:13\\n    at Test._assertFunction (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:285:13)\\n    at Test.assert (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:164:23)\\n    at localAssert (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:120:14)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:125:7\\n    at Request.callback (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\superagent\\\\lib\\\\node\\\\index.js:837:12)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\superagent\\\\lib\\\\node\\\\index.js:1078:18\\n    at IncomingMessage.<anonymous> (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\superagent\\\\lib\\\\node\\\\parsers\\\\json.js:21:7)\\n    at IncomingMessage.emit (node:events:531:35)\\n    at endReadableNT (node:internal/streams/readable:1696:12)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\"\n    }\n  }\n]",
              "code": "request('http://localhost:8081') // Test endpoint\n    .patch('/api/v1/users') // API endpoint\n    .set('Authorization', token) //set token\n    .send({\n        \"name\": name+\"patch\",\n        \"email\": email,\n        \"password\": password+\"patch\"\n      }) // request body\n    .expect(200) // expected response status code\n    .expect(function (res) {\n        expect(res.body.message).to.equal(\"User updated with success\") //Todo\n        }) // expected response body\n    .end((err, res) => {\n            addContext(this, { // Log the response body\n                title: 'Response Body',\n                value: res.body\n            })\n            if (err) {\n                addContext(this, { // Log error to report\n                    title: 'Error',\n                    value: err\n                })\n                return\n                \n            }\n            done()\n    }); // end the test case",
              "err": {
                "message": "Error: Timeout of 700ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\learning\\Testing_Bootcamp\\Mock_user_Auth_Supertest\\Testing_supertest\\Specs\\test.spec.js)",
                "estack": "Error: Timeout of 700ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\learning\\Testing_Bootcamp\\Mock_user_Auth_Supertest\\Testing_supertest\\Specs\\test.spec.js)\n    at listOnTimeout (node:internal/timers:581:17)\n    at process.processTimers (node:internal/timers:519:7)",
                "diff": null
              },
              "uuid": "9d462c8f-60dd-4fe9-a319-27b0a5e5b328",
              "parentUUID": "b5596e64-e439-43b7-b37c-cd51ed0ae79d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the \"DELETE USER BY TOKEN\" API returns correctly",
              "fullTitle": "Test Suite 1 - Verify that API Routes for mock-user-auth returns correctly (Valid) Verify that the \"DELETE USER BY TOKEN\" API returns correctly",
              "timedOut": true,
              "duration": 712,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Response Body\",\n    \"value\": {\n      \"message\": \"User deleted with success!\"\n    }\n  },\n  {\n    \"title\": \"Error\",\n    \"value\": {\n      \"name\": \"AssertionError\",\n      \"message\": \"expected 'User deleted with success!' to equal 'User deleted with success'\",\n      \"showDiff\": true,\n      \"actual\": \"User deleted with success!\",\n      \"expected\": \"User deleted with success\",\n      \"stack\": \"AssertionError: expected 'User deleted with success!' to equal 'User deleted with success'\\n    at Context.<anonymous> (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\Specs\\\\test.spec.js:154:18)\\n    at callFnAsync (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runnable.js:392:21)\\n    at Runnable.run (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runnable.js:336:7)\\n    at Runner.runTest (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:677:10)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:800:12\\n    at next (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:592:14)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:602:7\\n    at next (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:485:14)\\n    at Immediate._onImmediate (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\mocha\\\\lib\\\\runner.js:570:5)\\n    at process.processImmediate (node:internal/timers:483:21)\\n----\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\Specs\\\\test.spec.js:155:48\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:308:13\\n    at Test._assertFunction (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:285:13)\\n    at Test.assert (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:164:23)\\n    at localAssert (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:120:14)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\supertest\\\\lib\\\\test.js:125:7\\n    at Request.callback (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\superagent\\\\lib\\\\node\\\\index.js:837:12)\\n    at D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\superagent\\\\lib\\\\node\\\\index.js:1078:18\\n    at IncomingMessage.<anonymous> (D:\\\\learning\\\\Testing_Bootcamp\\\\Mock_user_Auth_Supertest\\\\Testing_supertest\\\\node_modules\\\\superagent\\\\lib\\\\node\\\\parsers\\\\json.js:21:7)\\n    at IncomingMessage.emit (node:events:531:35)\\n    at endReadableNT (node:internal/streams/readable:1696:12)\\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)\"\n    }\n  }\n]",
              "code": "request('http://localhost:8081') // Test endpoint\n    .delete('/api/v1/users') // API endpoint\n    .set('Authorization', token) //set token\n    .expect(200) // expected response status code\n    .expect(function (res) {\n       expect(res.body.message).to.equal(\"User deleted with success\") //Todo\n        }) // expected response body\n    .end((err, res) => {\n            addContext(this, { // Log the response body\n                title: 'Response Body',\n                value: res.body\n            })\n            if (err) {\n                addContext(this, { // Log error to report\n                    title: 'Error',\n                    value: err\n                })\n                return\n                \n            }\n            done()\n    }); // end the test case",
              "err": {
                "message": "Error: Timeout of 700ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\learning\\Testing_Bootcamp\\Mock_user_Auth_Supertest\\Testing_supertest\\Specs\\test.spec.js)",
                "estack": "Error: Timeout of 700ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\learning\\Testing_Bootcamp\\Mock_user_Auth_Supertest\\Testing_supertest\\Specs\\test.spec.js)\n    at listOnTimeout (node:internal/timers:581:17)\n    at process.processTimers (node:internal/timers:519:7)",
                "diff": null
              },
              "uuid": "0c3a9382-71bd-4d19-bd9a-fd23b529df7b",
              "parentUUID": "b5596e64-e439-43b7-b37c-cd51ed0ae79d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the \"DELETE ALL USERS\" API returns correctly",
              "fullTitle": "Test Suite 1 - Verify that API Routes for mock-user-auth returns correctly (Valid) Verify that the \"DELETE ALL USERS\" API returns correctly",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Response Body\",\n  \"value\": {\n    \"message\": \"Users deleted with success\"\n  }\n}",
              "code": "request('http://localhost:8081') // Test endpoint\n    .delete('/api/v1/all-users') // API endpoint\n    .send({\n            \"key_admin\": \"keyadmin123\" \n    }) \n    .expect(200) // expected response status code\n    .expect(function (res) {\n       expect(res.body.message).to.equal(\"Users deleted with success\") \n        }) // expected response body\n    .end((err, res) => {\n            addContext(this, { // Log the response body\n                title: 'Response Body',\n                value: res.body\n            })\n            if (err) {\n                addContext(this, { // Log error to report\n                    title: 'Error',\n                    value: err\n                })\n                return\n                \n            }\n            done()\n    }); // end the test case",
              "err": {},
              "uuid": "38e15be3-11e9-4a60-9e3d-80fbea0f5a63",
              "parentUUID": "b5596e64-e439-43b7-b37c-cd51ed0ae79d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b2e78b5-1bf9-4b29-be0a-28070d442da3",
            "c3479d0a-fdeb-4692-83b8-60587e79afc2",
            "38e15be3-11e9-4a60-9e3d-80fbea0f5a63"
          ],
          "failures": [
            "e8d1aa39-116c-44c4-bfc6-b1261b67391a",
            "9d462c8f-60dd-4fe9-a319-27b0a5e5b328",
            "0c3a9382-71bd-4d19-bd9a-fd23b529df7b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 700
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 700
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[status]_[datetime]-[name]-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "[status]_[datetime]-[name]-report",
        "html": "true",
        "json": "true",
        "overwrite": "true",
        "timestamp": "longDate",
        "showFailed": "true"
      },
      "version": "6.2.0"
    }
  }
}